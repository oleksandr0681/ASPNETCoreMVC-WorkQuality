@model WorkQuality.Models.Employee

@{
    ViewData["Title"] = "Details";
}

<h1>Подробиці</h1>

<div>
    <h4>Працівник</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-4 dtElement">
            @Html.DisplayNameFor(model => model.FullName)
        </dt>
        <dd class = "col-sm-8 ddElement">
            @Html.DisplayFor(model => model.FullName)
        </dd>
        <dt class = "col-sm-4 dtElement">
            @Html.DisplayNameFor(model => model.Job)
        </dt>
        <dd class = "col-sm-8 ddElement">
            @Html.DisplayFor(model => model.Job.Name)
        </dd>
        <dt class = "col-sm-4 dtElement">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-8 ddElement">
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
    <h3>Рейтинг</h3>
    <ul class="ratings">
        @if (Model.Assessments != null)
        {
            List<string> assesDates = new List<string>();
            List<string> ratings = new List<string>();
            @foreach (Assessment assessment in Model.Assessments)
            {
                if (assessment != null)
                {
                    ratings.Add(assessment.Rating.ToString());
                    assesDates.Add(assessment.AssessDate.ToString("MM-dd-yyyy"));
                    <li class="rating">
                        <span>
                            Дата оцінювання
                            @if (assessment.AssessDate != null)
                            {
                                @assessment.AssessDate.ToLongDateString()
                            }
                            , 
                        </span>
                        <span>
                            рейтинг 
                            @if (assessment.Rating != null)
                            {
                                <strong>@assessment.Rating</strong>
                            }
                        </span>
                        
                    </li>
                }
            }
            ViewData["ChartDates"] = assesDates;
            ViewData["ChartRatings"] = ratings;
        }
    </ul>
    <div id="chart"></div>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary">Змінити</a> @* | *@
    <a asp-action="Index" class="btn btn-primary">Повернутись до списку</a>
</div>

<script src="~/apexcharts/apexcharts.js"></script>
<script>
    let chartDates = [];
    let chartRatings = [];
    chartDates = @Html.Raw(Json.Serialize(ViewData["ChartDates"]));
    chartRatings = @Html.Raw(Json.Serialize(ViewData["ChartRatings"]));
    let chartData = [];
    if (chartDates.length > 0) {
        for (let i = 0; i < chartDates.length; i++) {
            let elementArray = [chartDates[i], Number.parseFloat(chartRatings[i].replace(",", "."))];
            chartData.push(elementArray);
        }
        let options = {
            chart: {
                type: 'line'
            },
            series: [{
                name: 'Rating',
                data: chartData
            }],
            // title: {
            //     text: 'Рейтинг',
            //     align: 'center'
            // },
            xaxis: {
                type: 'datetime'
            }
        }

        let chart = new ApexCharts(document.querySelector("#chart"), options);

        chart.render();
    }
    
</script>
